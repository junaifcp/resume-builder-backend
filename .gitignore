# .gitignore for a Node.js, TypeScript, and Express project

# General
# ----------------------------------------------------------------
# A good .gitignore starts with a comprehensive template.
# This is based on the standard Node template from gitignore.io.

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-temporary-files)
.grunt

# Bower dependency directory (if used)
/bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (if used)
web_modules/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.*
!.env.example

# parcel-bundler cache (if used)
.cache
.parcel-cache

# Next.js build output (if used in a monorepo)
.next
out

# Nuxt.js build output (if used in a monorepo)
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not just a folder named "public"
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Yalc
.yalc/
yalc.lock

# My Project Specific
# ----------------------------------------------------------------
# These are rules added specifically for YOUR project based on your package.json and app.ts.

# TypeScript Build Output
# Ignore the entire /dist directory where your compiled JavaScript lives.
/dist

# Uploads Directory
# Your app uses multer to save files to an 'uploads' directory.
# You typically don't want to commit user-uploaded files to your repository.
# If you have default placeholder images in this folder that you WANT to commit,
# you can add exceptions, e.g., !uploads/default-avatar.png
/uploads

# IDE / Editor Configuration
# Ignore configuration files from popular code editors to keep the repo clean.
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# OS-specific files
# Ignore files generated by macOS, Windows, and Linux systems.
.DS_Store
Thumbs.db
desktop.ini